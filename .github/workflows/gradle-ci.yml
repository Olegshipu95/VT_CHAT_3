name: Java CI with Gradle

on:
  push:
    branches: [ "master" ]
jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Amazon Corretto 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Grant execute permission to gradlew
        run: |
          chmod +x ./config/gradlew
          chmod +x ./eureka/gradlew
          chmod +x ./gateway/gradlew
          chmod +x ./feed/gradlew
          chmod +x ./file/gradlew
          chmod +x ./messenger/gradlew
          chmod +x ./notification/gradlew
          chmod +x ./subs/gradlew
          chmod +x ./user/gradlew
      - name: Build with Gradle (skip tests)
        run: |
          cd ./config && ./gradlew build -x test --no-daemon
          cd ../eureka && ./gradlew build -x test --no-daemon
          cd ../gateway && ./gradlew build -x test --no-daemon
          cd ../feed && ./gradlew build -x test -x jacocoTestCoverageVerification --no-daemon
          cd ../file && ./gradlew build -x test -x jacocoTestCoverageVerification --no-daemon
          cd ../messenger && ./gradlew build -x test -x jacocoTestCoverageVerification --no-daemon
          cd ../notification && ./gradlew build -x test -x jacocoTestCoverageVerification --no-daemon
          cd ../subs && ./gradlew build -x test -x jacocoTestCoverageVerification --no-daemon
          cd ../user && ./gradlew build -x test -x jacocoTestCoverageVerification --no-daemon
  test:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Set up Amazon Corretto 21
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'
      - name: Grant execute permission to gradlew
        run: |
          chmod +x ./config/gradlew
          chmod +x ./eureka/gradlew 
          chmod +x ./feed/gradlew
          chmod +x ./file/gradlew
          chmod +x ./gateway/gradlew
          chmod +x ./messenger/gradlew
          chmod +x ./notification/gradlew
          chmod +x ./subs/gradlew
          chmod +x ./user/gradlew
      - name: Run Tests with Gradle
        run: |
          cd ./config && ./gradlew test --no-daemon
          cd ../eureka && ./gradlew test --no-daemon
          cd ../feed && ./gradlew test --no-daemon
          cd ../gateway && ./gradlew test --no-daemon
          cd ../file && ./gradlew test --no-daemon
          cd ../messenger && ./gradlew test --no-daemon
          cd ../notification && ./gradlew test --no-daemon
          cd ../subs && ./gradlew test --no-daemon
          cd ../user && ./gradlew test --no-daemon
  docker:
    runs-on: ubuntu-22.04
    needs: test
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and Push Docker Images
        run: |
          echo "DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'"
          echo "DOCKER_REPO_NAME: '${{ secrets.DOCKER_REPO_NAME }}'"
          for service in config eureka feed gateway file messenger notification subs user; do
            echo "Building and pushing image for $service"
            docker build -t ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:$service-latest ./$service
            docker push ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPO_NAME }}:$service-latest
          done

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'jacoco'
}

group = 'org.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    implementation 'jakarta.transaction:jakarta.transaction-api:2.0.0'

    // Reactive database
    implementation 'org.postgresql:postgresql:42.7.2'
    implementation 'org.postgresql:r2dbc-postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'

    // Liquibase
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework:spring-jdbc'
    implementation 'net.lbruun.springboot:preliquibase-spring-boot-starter:1.5.1'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Spring Cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-config'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    // OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.6.0'

    // Test dependencies
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'org.testcontainers:r2dbc'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'io.projectreactor:reactor-test'
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2023.0.3'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport
    finalizedBy jacocoTestCoverageVerification
}

jacocoTestReport {
    dependsOn test
    reports {
        html.required.set(true)
    }
    classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, excludes: [
                'user/config/*',
                'user/controller/*',
                'user/exception/*',
                'user/utils/*',
                'user/UserApplication.class'
        ])
    }))
}


jacocoTestCoverageVerification {
    violationRules {
        rule {
            element = 'BUNDLE'
            limit {
                counter = 'INSTRUCTION'
                value = 'COVEREDRATIO'
                minimum = 0.70
            }
        }
    }
    classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, excludes: [
                'user/config/*',
                'user/exception/*',
                'user/utils/*',
                'user/UserApplication.class'
        ])
    }))
}